on:
  push:
    tags:
      - "v*"

concurrency: ci-${{ github.ref }}

jobs:
  test:
    uses: ./.github/workflows/test.yaml

  check-env:
    outputs:
      credentials-defined: ${{ steps.get-credentials.outputs.defined }}
    runs-on: ubuntu-latest
    steps:
      - id: get-credentials
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
        if: ${{ env.GRADLE_PUBLISH_KEY != '' && env.GRADLE_PUBLISH_SECRET != '' }}
        run: |
          echo "defined=true" >> $GITHUB_OUTPUT

  publish:
    needs: [test, check-env]
    if: needs.check-env.outputs.credentials-defined == 'true'
    permissions:
      contents: write
    strategy:
      matrix:
        target: [ macos-arm64, macos-x64, ubuntu-x64, windows-x64 ]
        include:
          - target: ubuntu-x64
            os: ubuntu
            runs: ubuntu-latest
            platform-name: linuxX64
            release-file: bootstrapper.kexe
            asset-name: graboo-linux-x64
          - target: macos-arm64
            os: macos
            runs: macos-latest
            platform-name: macosArm64
            release-file: bootstrapper.kexe
            asset-name: graboo-macos-arm64
          - target: macos-x64
            os: macos
            runs: macos-latest
            platform-name: macosX64
            release-file: bootstrapper.kexe
            asset-name: graboo-macos-x64
          - target: windows-x64
            os: windows
            runs: windows-latest
            platform-name: mingwX64
            release-file: bootstrapper.exe
            asset-name: graboo-windows-x64.exe
    runs-on: ${{ matrix.runs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Publish Plugin
        if: matrix.os == 'ubuntu'
        run: |
          ./gradlew :gradle-plugin:publishPlugins -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}

      - name: Install Dependencies
        if: matrix.os == 'ubuntu'
        run: |
          sudo apt update
          sudo apt-get install libcurl4-gnutls-dev

      - name: graboo executable
        run: |
          ./gradlew :bootstrapper:linkReleaseExecutable${{ matrix.platform-name }}


      # todo: possible race condition as plugin is published by the ubuntu runner

      # this test is here because it requires the released gradle plugin
      # todo: doesn't run on macos-arm64
      - name: test graboo
        if: ${{ matrix.target == 'ubuntu-x64' || martix.target == 'macos-x64' }}
        run: |
          mkdir ~/.graboo
          cp ${{ github.workspace }}/bootstrapper/build/bin/${{ matrix.platform-name }}/releaseExecutable/${{ matrix.release-file }} ~/.graboo/${{ matrix.asset-name }}
          cd ${{ runner.temp }}
          ${{ github.workspace }}/templater/scripts/graboo new javaapp javaapp
          cd javaapp
          output=$(./graboo run)
          echo $output
          echo $output | grep --quiet "hello, world"

      # this test is here because it requires the released gradle plugin
      - name: test graboo.cmd
        if: matrix.os == 'windows'
        run: |
          mkdir ~/AppData/Local/graboo
          cp ${{ github.workspace }}/bootstrapper/build/bin/${{ matrix.platform-name }}/releaseExecutable/${{ matrix.release-file }} ~/AppData/Local/graboo/${{ matrix.asset-name }}
          cd ${{ runner.temp }}
          ${{ github.workspace }}/templater/scripts/graboo.cmd new javaapp javaapp
          cd javaapp
          # todo: verify output
          .\graboo.cmd run


      - name: upload executables
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset-name }}
          path: bootstrapper/build/bin/${{ matrix.platform-name }}/releaseExecutable/${{ matrix.release-file }}

      - name: release binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bootstrapper/build/bin/${{ matrix.platform-name }}/releaseExecutable/${{ matrix.release-file }}
          asset_name: ${{ matrix.asset-name }}
          overwrite: true
          tag: ${{ github.ref }}
